apply plugin: 'com.android.application'

buildscript {
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.1'
        classpath 'org.mozilla.rust-android-gradle:plugin:0.9.3'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'org.mozilla.rust-android-gradle.rust-android'

cargo {
    module = "../"
    libname = "vss"
    targets = ["arm", "arm64", "x86", "x86_64"]
    targetDirectory = "../../target"
}

android {
    compileSdkVersion 33
    ndkVersion "23.1.7779620"
    defaultConfig {
        applicationId "com.vss"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dependencies {
        implementation 'androidx.annotation:annotation:1.5.0'
        implementation 'androidx.appcompat:appcompat:1.6.1'
        implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
        implementation 'androidx.slidingpanelayout:slidingpanelayout:1.2.0'
        implementation 'com.google.android.material:material:1.8.0'
    }
    namespace 'com.vss'
    tasks.whenTaskAdded { task ->
        // Require cargo to be run before copying JNI libraries.
        if ((task.name == 'mergeDebugJniLibFolders' || task.name == 'mergeReleaseJniLibFolders')) {
            task.dependsOn 'cargoBuild'
        }
        // Require "clean builds" to avoid issues with build caches.
        if (task.name == 'assembleDebug' || task.name == 'assembleRelease')  {
            task.dependsOn 'clean'
        }
    }
}
